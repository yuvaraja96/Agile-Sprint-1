
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JScrollPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ZHIHWA
 */
public class CatalogOrders extends javax.swing.JFrame {


    /**
     * Creates new form CatalogOrders
     */
    public CatalogOrders() {
       
        initComponents();
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Date date = new Date();
        txtDate.setText(dateFormat.format(date));
        
        BufferedReader dread = null;
        BufferedReader read = null;
        btnNext.setVisible(false);

        txtAddress.setPreferredSize(new Dimension(100,100));
    }
    
    
    public class FormatedDate {
       Date dNow = new Date();
       SimpleDateFormat ft = new SimpleDateFormat("E yyyy.MM.dd 'at' hh:mm:ss a zzz");
       String reportDate = ft.format(dNow);

    public void LoadDate() {
       txtDate.setText(reportDate);

  }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jpnFlower = new javax.swing.JPanel();
        lblOrder = new javax.swing.JLabel();
        lblItemName = new javax.swing.JLabel();
        cboItem = new javax.swing.JComboBox<>();
        lblType = new javax.swing.JLabel();
        jpnItemType = new javax.swing.JPanel();
        chkRed = new javax.swing.JCheckBox();
        chkYellow = new javax.swing.JCheckBox();
        chkPink = new javax.swing.JCheckBox();
        chkWhite = new javax.swing.JCheckBox();
        lblCustomerName = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        lblPhNumber = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        IblQuantity = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lblDate = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        lblCompany = new javax.swing.JLabel();
        txtCompany = new javax.swing.JTextField();
        btnNext = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpnFlower.setPreferredSize(new java.awt.Dimension(913, 733));

        lblOrder.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblOrder.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblOrder.setText("Order Flowers");
        lblOrder.setToolTipText("");
        lblOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblItemName.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblItemName.setText("Item Name: ");

        cboItem.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cboItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rose", "Lilies", "Tulips", "Orchids", "Daffodils", "Chrysanthemum", "" }));
        cboItem.setToolTipText("");
        cboItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboItemActionPerformed(evt);
            }
        });

        lblType.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblType.setText("Item Type: ");

        buttonGroup1.add(chkRed);
        chkRed.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        chkRed.setText("Red      x1 RM19.90");
        chkRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRedActionPerformed(evt);
            }
        });

        buttonGroup1.add(chkYellow);
        chkYellow.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        chkYellow.setText("Yellow x1 RM14.90");

        buttonGroup1.add(chkPink);
        chkPink.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        chkPink.setText("Pink     x1 RM19.90");
        chkPink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPinkActionPerformed(evt);
            }
        });

        buttonGroup1.add(chkWhite);
        chkWhite.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        chkWhite.setText("White   x1 RM14.90");

        javax.swing.GroupLayout jpnItemTypeLayout = new javax.swing.GroupLayout(jpnItemType);
        jpnItemType.setLayout(jpnItemTypeLayout);
        jpnItemTypeLayout.setHorizontalGroup(
            jpnItemTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chkRed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(chkYellow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(chkPink, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(chkWhite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpnItemTypeLayout.setVerticalGroup(
            jpnItemTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnItemTypeLayout.createSequentialGroup()
                .addComponent(chkRed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkPink)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chkYellow, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkWhite)
                .addContainerGap())
        );

        lblCustomerName.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblCustomerName.setText("Customer Name:");

        lblAddress.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblAddress.setText("Address: ");

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        jScrollPane1.setViewportView(txtAddress);

        lblPhNumber.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPhNumber.setText("Phone Number: ");

        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });
        txtPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPhoneKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        IblQuantity.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        IblQuantity.setText("Item Quantity");

        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });
        txtQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQuantityKeyTyped(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lblDate.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblDate.setText("Date : ");

        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        lblCompany.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblCompany.setText(" Company Name :");
        lblCompany.setToolTipText("");

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnFlowerLayout = new javax.swing.GroupLayout(jpnFlower);
        jpnFlower.setLayout(jpnFlowerLayout);
        jpnFlowerLayout.setHorizontalGroup(
            jpnFlowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnFlowerLayout.createSequentialGroup()
                .addGroup(jpnFlowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnFlowerLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpnFlowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jpnFlowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jpnFlowerLayout.createSequentialGroup()
                                    .addGroup(jpnFlowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(lblItemName)
                                        .addComponent(lblType)
                                        .addComponent(IblQuantity)
                                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jpnItemType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cboItem, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(72, 72, 72)
                                    .addGroup(jpnFlowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblCompany)
                                        .addComponent(txtCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblCustomerName)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblAddress)
                                        .addComponent(lblPhNumber)))
                                .addGroup(jpnFlowerLayout.createSequentialGroup()
                                    .addComponent(lblDate)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jpnFlowerLayout.createSequentialGroup()
                                .addComponent(btnClear)
                                .addGap(36, 36, 36)
                                .addComponent(btnSubmit)
                                .addGap(130, 130, 130))))
                    .addGroup(jpnFlowerLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(lblOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnFlowerLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(btnNext)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jpnFlowerLayout.setVerticalGroup(
            jpnFlowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnFlowerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnFlowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDate)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnFlowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnFlowerLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lblCompany)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCustomerName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblAddress)
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPhNumber)
                        .addGap(18, 18, 18)
                        .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnFlowerLayout.createSequentialGroup()
                        .addComponent(lblItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblType)
                        .addGap(13, 13, 13)
                        .addComponent(jpnItemType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(IblQuantity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnNext)
                .addGap(4, 4, 4)
                .addGroup(jpnFlowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnClear))
                .addGap(189, 189, 189)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        lblDate.getAccessibleContext().setAccessibleName("Date");
        lblDate.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnFlower, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpnFlower, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkPinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPinkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkPinkActionPerformed

    private void chkRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRedActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_chkRedActionPerformed

    private void cboItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboItemActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cboItemActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        DecimalFormat df2 = new DecimalFormat(".##");
        JFrame flower = new JFrame();
        double red = 19.90;
        double pink = 19.90;
        double yellow = 14.90;
        double white = 14.90;
        double total=0;
        String quantity = txtQuantity.getText();
        String type ="";
        String OrderID="";
        int count =0;
        double q =Double.parseDouble(quantity);
        
    
        
        if(!txtCompany.getText().equals("")){
          if(q>=100 && q<=1000){
            JOptionPane.showMessageDialog(flower, "THANK YOU FOR BUY");  
          }
          else{
            JOptionPane.showMessageDialog(flower, "Your Monthly limt is over! Please do not less than 100 and more than 1000");   
            System.exit(0);
          }  
        }else{
         JOptionPane.showMessageDialog(flower, "THANK YOU FOR BUY"); 
        }
        
        
        if (chkRed.isSelected()||quantity!=null ){
            type = "Red";
            total=red*Double.parseDouble(quantity);   
        }else if (chkPink.isSelected()||quantity!=null){
            type = "Pink";
            total=pink*Double.parseDouble(quantity);
        }else if (chkYellow.isSelected()||quantity!=null){
            type = "Yellow";
            total=yellow*Double.parseDouble(quantity);
        }else if (chkWhite.isSelected()||quantity!=null){
            type ="White";
            total=white*Double.parseDouble(quantity);
        }else {
            JOptionPane.showMessageDialog(flower, "Please Select Item Type");
            System.exit(0);
        } 
        
        //Write In Text File (data)
        String date = txtDate.getText();
        String name = txtCustomerName.getText();
        String address = txtAddress.getText();
        String phone = txtPhone.getText();
        String item =cboItem.getSelectedItem().toString();
        String color =type;
        String t = df2.format(total);
        String company = txtCompany.getText();
       
     
        //Write In Text File (Try Catch)
        try{
         if (txtCompany.getText().equals("") ){
             company= "-";
         }else {
             company = txtCompany.getText();
         } 
         
        FileReader fr = new FileReader("Order.txt");
        BufferedReader br = new BufferedReader(fr);
        String line;
        while ((line = br.readLine()) != null) {
                count++;
            }
            br.close();

            
         if (count <10) {
            OrderID = "OR10000" + Integer.toString(count + 1); 
        }else if (count <100){
            OrderID = "OR1000" + Integer.toString(count + 1); 
        }else if (count >= 100 && count < 1000) {
            OrderID = "OR100" + Integer.toString(count + 1);
        } else if (count >= 1000 && count < 10000) {
            OrderID = "OR0" + Integer.toString(count + 1);
        } else {
            OrderID = "OR" + Integer.toString(count + 1);
        }
             
         FileWriter writer = new FileWriter("Order.txt", true);  
         writer.write(OrderID+","+company+","+name+ "," +address+ "," +phone+ "," +item+ "," +color+ "," +quantity+ "," +t);
          writer.write(System.getProperty("line.separator"));
          writer.flush();
          writer.close();
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error");
        }
        //------------------------------------------------------------------------------------------------
        
            if (txtQuantity.getText().equals("") || txtCustomerName.getText().equals("") ||
             txtAddress.getText().equals("") || txtPhone.getText().equals("") ){
            JOptionPane.showMessageDialog(flower, "Please fill the empty"); 
        
    
        }else {
            JOptionPane.showMessageDialog(flower, 
                    "Company Name : " +txtCompany.getText()+
                    "\n Customer Name : " +txtCustomerName.getText()+ 
                    "\n Address : " +txtAddress.getText()+
                    "\n Phone Number: "+txtPhone.getText()+
                    "\n Item Name : " +cboItem.getSelectedItem().toString()+
                    "\n Item Type : " +type+
                    "\n Item Quantity : " +txtQuantity.getText()+
                    "\n Total : " + df2.format(total));
        }
        JOptionPane.showMessageDialog(flower,"Click Next To Choose Shipping!!!");
        btnSubmit.setVisible(false);
        btnClear.setVisible(false);
        btnNext.setVisible(true);
        
        
        
                
                
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtCustomerName.setText("");
        txtAddress.setText("");
        txtPhone.setText("");
        txtQuantity.setText("");
        txtCompany.setText("");
        chkRed.setSelected(false);
        chkPink.setSelected(false);
        chkYellow.setSelected(false);
        chkWhite.setSelected(false);  
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDateActionPerformed

    private void txtQuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantityKeyTyped
        // TODO add your handling code here:
        char vchar = evt.getKeyChar();
        if (!(Character.isDigit(vchar))
            || (vchar == KeyEvent.VK_BACKSPACE)
            || (vchar == KeyEvent.VK_DELETE)){
        evt.consume();
    }       
    }//GEN-LAST:event_txtQuantityKeyTyped

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:
 
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void txtPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneKeyTyped
        // TODO add your handling code here:
        char vchar = evt.getKeyChar();
        if (!(Character.isDigit(vchar))
            || (vchar == KeyEvent.VK_BACKSPACE)
            || (vchar == KeyEvent.VK_DELETE)){
        evt.consume();
        }   
    }//GEN-LAST:event_txtPhoneKeyTyped

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        ShippingOrder add = new ShippingOrder(txtAddress.getText());
        add.setVisible(true);
    }//GEN-LAST:event_btnNextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CatalogOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CatalogOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CatalogOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CatalogOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CatalogOrders().setVisible(true);
                
                }
        }
    
        );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IblQuantity;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnSubmit;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cboItem;
    private javax.swing.JCheckBox chkPink;
    private javax.swing.JCheckBox chkRed;
    private javax.swing.JCheckBox chkWhite;
    private javax.swing.JCheckBox chkYellow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpnFlower;
    private javax.swing.JPanel jpnItemType;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCompany;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblItemName;
    private javax.swing.JLabel lblOrder;
    private javax.swing.JLabel lblPhNumber;
    private javax.swing.JLabel lblType;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtCompany;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
